from instaclient import InstaClient
from instaclient.errors import *
import csv

# Create a instaclient object. Place as driver_path argument the path that leads to where you saved the chromedriver.exe file
client = InstaClient(driver_path='chromedriver.exe')

try:
    client.login(username='therealmlkr@gmail.com', password='mareandistrugatorul1')  # Go through Login Procedure
except VerificationCodeNecessary:
    # This error is raised if the user has 2FA turned on.
    code = input('Enter the 2FA security code generated by your Authenticator App or sent to you by SMS')
    client.input_verification_code(code)
except SuspisciousLoginAttemptError as error:
    # This error is reaised by Instagram
    if error.mode == SuspisciousLoginAttemptError.EMAIL:
        code = input('Enter the security code that was sent to you via email: ')
    else:
        code = input('Enter the security code that was sent to you via SMS: ')
    client.input_security_code(code)

# profile = client.get_profile('robert.palade')
# result = client.send_dm('madalinatugui', 'Sa ai o zi okey!')
max_followers_count = 200
max_following_count = 50
target_user = 'madalinatugui'
target_user_followers = client.get_followers(user=target_user, count=max_followers_count)
followings_of_followers_of_target_user = []
target_user_following = client.get_following(user=target_user, count=max_following_count)
print(type(target_user_followers))
print("Target_user_followers: " + str(target_user_followers[0]))
for follower in target_user_followers[0]:
    print("Target user follower: " + follower.username)
    followings_of_followers_of_target_user.append(client.get_following(user=follower.username, count=max_following_count))

print(f"First {max_followers_count} followers of the target user: " + str(followings_of_followers_of_target_user))
print(f"First {max_followers_count} target user following: " + str(target_user_following))
count = 0
edges = [["Source", "Target", "Label", "Type", "Weight"]]
nodes = [["id", "label"], [1, "madalinatugui"]]
index = 2
for one_following_target_user in target_user_following[0]:
    for i in range(0, len(followings_of_followers_of_target_user)):
        for one_following_not_user_target in followings_of_followers_of_target_user[i][0]:
            if one_following_target_user == one_following_not_user_target:
                print(f"Index: {i} Follower: {target_user_followers[0][i].username}")
                ok = 0
                index_i = 0
                for tuple in nodes:
                    if tuple[1] == target_user_followers[0][i].username:
                        ok = 1
                        index_i = tuple[0]
                        break
                if ok == 0:
                    nodes.append([index, target_user_followers[0][i].username])
                    index_i = index
                    index += 1
                ok = 0
                for k in range(0, len(edges)):
                    if edges[k][0] == 1 and edges[k][1] == index_i:
                        edges[k][2] = edges[k][2] + " " + one_following_target_user.username
                        edges[k][4] += 1
                        ok = 1
                if ok == 0:
                    edges.append([1, index_i, one_following_target_user.username, "undirected", 0])

                print("Common following: " + one_following_target_user.username)

for i in range(0, len(followings_of_followers_of_target_user)):
    for j in range(0, len(followings_of_followers_of_target_user)):
        if i != j:
            for following1 in followings_of_followers_of_target_user[i][0]:
                for following2 in followings_of_followers_of_target_user[j][0]:
                    if following1 == following2:
                        print(f"Index: {i} Follower: {target_user_followers[0][i].username}")
                        ok1 = 0
                        ok2 = 0
                        index_i = 0
                        index_j = 0
                        for tuple in nodes:
                            if tuple[1] == target_user_followers[0][i].username:
                                ok1 = 1
                                index_i = tuple[0]
                            if tuple[1] == target_user_followers[0][j].username:
                                ok2 = 1
                                index_j = tuple[0]
                            if ok1 == 1 and ok2 == 1:
                                break
                        if ok1 == 0:
                            nodes.append([index, target_user_followers[0][i].username])
                            index_i = index
                            index += 1
                        if ok2 == 0:
                            nodes.append([index, target_user_followers[0][j].username])
                            index_j = index
                            index += 1
                        ok = 0
                        for k in range(0, len(edges)):
                            if edges[k][0] == index_i and edges[k][1] == index_j:
                                edges[k][2] = edges[k][2] + " " + following1.username
                                edges[k][4] += 1
                                ok = 1
                            if edges[k][0] == index_j and edges[k][1] == index_i:
                                ok = 1
                        if ok == 0:
                            edges.append([index_i, index_j, following1.username, "undirected", 0])
                        print("Common following: " + following1.username)


with open('edges.csv', 'w', newline="\n") as file:
    writer = csv.writer(file)
    writer.writerows(edges)
with open('nodes.csv', 'w', newline="\n") as file:
        writer = csv.writer(file)
        writer.writerows(nodes)
# profile.refresh() # syncing with instagram
